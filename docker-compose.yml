services:
  social:
    build:
      context: ./backend
      dockerfile: social/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    command: >
      /bin/sh -c "alembic upgrade head && python -m backend.common.seed && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-8000}/health || exit 1"]
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3

  marketplace:
    build:
      context: ./backend
      dockerfile: marketplace/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-8001}/health || exit 1"]
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3

  facility:
    build:
      context: ./backend
      dockerfile: facility/Dockerfile
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-8002}/health || exit 1"]
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3

  ai:
    build:
      context: ./backend
      dockerfile: ai/Dockerfile
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-8003}/health || exit 1"]
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - neo4j_data:/data
      - ~/neo4j-config/neo4j.conf:/var/lib/neo4j/conf/neo4j.conf
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  neo4j_data:
  es_data:
